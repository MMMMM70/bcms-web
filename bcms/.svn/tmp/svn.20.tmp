package net.su.bcms.dataAccessObject;

import java.util.ArrayList;
import java.util.List;

import net.su.bcms.valueObject.ComnctnNmeCardValueObject;
import net.su.bcms.valueObject.NmeCardValueObject;
import net.su.bcms.valueObject.SearchAndPageValueObject;
import net.su.logger.Logger;

import org.mybatis.spring.support.SqlSessionDaoSupport;
import org.springframework.stereotype.Repository;

@Repository
public class NmeCardDataAccessObject extends SqlSessionDaoSupport {
	
	//명함 등록 완료
	public void insertNmeCard(NmeCardValueObject nmeCardValueObject) throws Exception {
		Logger.info(null);
		getSqlSession().insert("nmeCardMapper.insertNmeCard", nmeCardValueObject);
	}
	
	//명함 목록 조회
	public List<NmeCardValueObject> selectNmeCardList(NmeCardValueObject nmeCardValueObject) throws Exception {
		Logger.info(null);
		List<NmeCardValueObject> selectNmeCardList = getSqlSession().selectList("nmeCardMapper.selectNmeCardList", nmeCardValueObject);		
		return selectNmeCardList;
	}
	
	//명함 레코드 조회
	public int selectNmeCardCount(NmeCardValueObject NmeCardValueObject) throws Exception {
		Logger.info(null);
		int selectNmeCardCount = getSqlSession().selectOne("nmeCardMapper.selectNmeCardCount", NmeCardValueObject);
		return selectNmeCardCount;
	}
	
	//명함 상세 조회
	public NmeCardValueObject selectNmeCardView(int nmeCardSeq) throws Exception {
		Logger.info(null);
		NmeCardValueObject selectNmeCardView = getSqlSession().selectOne("nmeCardMapper.selectNmeCardView", nmeCardSeq);
		return selectNmeCardView;
	}
	
	//명함 수정 완료
	public void updateNmeCard(NmeCardValueObject nmeCardValueObject) throws Exception {
		Logger.info(null);
		getSqlSession().update("nmeCardMapper.updateNmeCard", nmeCardValueObject);
	}
	
	//명함 삭제 완료
	public void deleteNmeCard(ArrayList<Integer> deleteArray) throws Exception {
		Logger.info(null);
		for(int i=0; i<deleteArray.size();i++){
			int nmeCardSeq = deleteArray.get(i);
			getSqlSession().update("nmeCardMapper.deleteNmeCard", nmeCardSeq);
		}
	}
	
	//명함 완전 삭제
	public void deleteNmeCardBin(ArrayList<Integer> deleteArray) throws Exception {
		Logger.info(null);
		for(int i=0; i<deleteArray.size();i++){
			int nmeCardSeq = deleteArray.get(i);
			getSqlSession().update("nmeCardMapper.deleteNmeCardBin", nmeCardSeq);
		}
	}
	
	//명함 복원
	public void recvyNmeCardBin(ArrayList<Integer> deleteArray) throws Exception {
		Logger.info(null);
		for(int i=0; i<deleteArray.size();i++){
			int nmeCardSeq = deleteArray.get(i);
			getSqlSession().update("nmeCardMapper.recvyNmeCardBin", nmeCardSeq);
		}
	}
	
	//명함 자격증 목록 조회
	public List<NmeCardValueObject> selectLicnsList() throws Exception {
		List<NmeCardValueObject> selectLicnsList = getSqlSession().selectList("nmeCardMapper.selectLicnsList");
		return selectLicnsList;
	}
	
	//명함 커뮤니케이션 리스트 조회
	public List<ComnctnNmeCardValueObject> selectNmeCardComnctnList(ComnctnNmeCardValueObject ComnctnNmeCardValueObject) throws Exception {
		System.out.println("NmeCardDataAccessObject의 selectNmeCardComnctnList()작동");
		System.out.println(ComnctnNmeCardValueObject.getComnctnType()+"!!!!!!!!!!!!!!!!!!!!!!");
		List<ComnctnNmeCardValueObject> selectComnctnNmeCardList = getSqlSession().selectList("nmeCardMapper.selectNmeCardComnctnList", ComnctnNmeCardValueObject);
		return selectComnctnNmeCardList;
		}
}
