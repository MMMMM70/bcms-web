package net.su.bcms.controller;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import net.su.bcms.service.NmeCardService;
import net.su.bcms.valueObject.NmeCardValueObject;
import net.su.bcms.valueObject.SearchAndPageValueObject;
import net.su.bcms.valueObject.ComnctnNmeCardValueObject;
import net.su.bcms.valueObject.ComnctnSearchAndPageValueObject;
import net.su.login.valueObject.MemValueObject;
import net.su.login.service.MemService;
import net.su.logger.Logger;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;

@Controller
public class NmeCardController {
   
   @Resource
   private NmeCardService nmeCardService;
   
   @Resource
   private MemService memService;
   
   
   //명함 자격증 목록 보기
   @RequestMapping(value = "/nmeCardLicns.do", method={RequestMethod.GET, RequestMethod.POST})
   public String nmeCardLicns(ModelMap model)throws Exception {
      Logger.info(null);
      List<NmeCardValueObject> selectLicnsList = nmeCardService.selectLicnsList();
      model.addAttribute("selectLicnsList", selectLicnsList);
      return "nmeCard/nmeCardLicns";
   }
   
   //명함 등록 화면
   @RequestMapping(value = "/nmeCardInsertForm.do", method={RequestMethod.GET, RequestMethod.POST})
   public String nmeCardInsertForm(@ModelAttribute("nmeCardValueObject") NmeCardValueObject nmeCardValueObject, ModelMap model) throws Exception {
      Logger.info(null);
      List<NmeCardValueObject> selectLicnsList = nmeCardService.selectLicnsList();
      model.addAttribute("selectLicnsList", selectLicnsList);
      return "nmeCard/nmeCardInsertForm";
   }
   
   //명함 등록 완료
   @RequestMapping(value = "/insertNmeCard.do", method={RequestMethod.GET, RequestMethod.POST})
   public String insertNmeCard(NmeCardValueObject nmeCardValueObject, HttpSession session, MemValueObject memValueObject) throws Exception {
	   	Logger.info(null);
		session.getAttribute("userLoginInfo");
		MemValueObject userLoginInfo = (MemValueObject)session.getAttribute("userLoginInfo");
		nmeCardValueObject.setCretrSeq(userLoginInfo.getMemSeq());
		nmeCardService.insertNmeCard(nmeCardValueObject);
		return "redirect:/nmeCardSelectForm.do";
   }
   
   //명함 조회 화면
   @RequestMapping(value = "/nmeCardSelectForm.do", method={RequestMethod.GET, RequestMethod.POST})
   public String nmeCardSelectForm(NmeCardValueObject nmeCardValueObject, SearchAndPageValueObject searchAndPageValueObject, ModelMap model, HttpSession session, MemValueObject memValueObject) throws Exception {
      Logger.info(null);
      session.getAttribute("userLoginInfo");
      MemValueObject userLoginInfo = (MemValueObject)session.getAttribute("userLoginInfo");
      nmeCardValueObject.setCretrSeq(userLoginInfo.getMemSeq());
      nmeCardValueObject.setNmeCardUseAt("Y");
      List<NmeCardValueObject> selectNmeCardList = nmeCardService.selectNmeCardList(nmeCardValueObject);
      model.addAttribute("selectNmeCardList", selectNmeCardList);
      return "nmeCard/nmeCardSelectForm";
   }
   //명함 상세조회 화면
   @RequestMapping(value = "/nmeCardSelectViewForm.do", method={RequestMethod.GET, RequestMethod.POST})
   public String nmeCardViewForm(@ModelAttribute("nmeCardValueObject") NmeCardValueObject nmeCardValueObject, ModelMap model, HttpSession session,ComnctnNmeCardValueObject comnctnNmeCardValueObject) throws Exception {
      Logger.info(null);
      nmeCardValueObject = nmeCardService.selectNmeCardView(nmeCardValueObject);
      model.addAttribute("selectNmeCardView", nmeCardValueObject);
      session.setAttribute("sessionNmeCardSeq", null);
      session.setAttribute("sessionNmeCardSeq", nmeCardValueObject);
      NmeCardValueObject sessionNmeCardSeq = (NmeCardValueObject)session.getAttribute("sessionNmeCardSeq");
      return "nmeCard/nmeCardSelectViewForm";
   }
   
   //명함 수정 화면
   @RequestMapping(value = "/nmeCardUpdateForm.do", method={RequestMethod.GET, RequestMethod.POST})
   public String nmeCardUpdateForm(@ModelAttribute("nmeCardValueObject") NmeCardValueObject nmeCardValueObject, ModelMap model) throws Exception {
      Logger.info(null);
      NmeCardValueObject selectNmeCardView = nmeCardService.selectNmeCardView(nmeCardValueObject);
      model.addAttribute("selectNmeCardView", selectNmeCardView);
      return "nmeCard/nmeCardUpdateForm";
   }
   
   //명함 수정 완료 
   @RequestMapping(value = "/updateNmeCard.do", method={RequestMethod.GET, RequestMethod.POST})
   public String updateNmeCard(@ModelAttribute("nmeCardValueObject") NmeCardValueObject nmeCardValueObject, Model model) throws Exception {
      Logger.info(null);
      nmeCardService.updateNmeCard(nmeCardValueObject);
      NmeCardValueObject selectNmeCardView = nmeCardService.selectNmeCardView(nmeCardValueObject);
      model.addAttribute("selectNmeCardView", selectNmeCardView);
      return "nmeCard/nmeCardSelectViewForm";
   }
   
   //명함 삭제 완료
   @RequestMapping(value = "/deleteNmeCard.do", method={RequestMethod.GET, RequestMethod.POST})
   public String deleteNmeCard(@RequestParam(value="checkArray[]") List<Integer> deleteList, @ModelAttribute("nmeCardValueObject") NmeCardValueObject nmeCardValueObject, ModelMap model) throws Exception {
      Logger.info(null);
      ArrayList<Integer> deleteArray = new ArrayList<Integer>();
      for(int i=0;i<deleteList.size();i++){
         deleteArray.add(deleteList.get(i));
      }
      nmeCardService.deleteNmeCard(deleteArray);
      return "redirect:/nmeCardSelectForm.do";
   }
   
	//명함 휴지통 조회 화면
	@RequestMapping(value = "/nmeCardBinSelectForm.do", method={RequestMethod.GET, RequestMethod.POST})
	public String nmeCardBinSelectForm(NmeCardValueObject nmeCardValueObject, SearchAndPageValueObject searchAndPageValueObject, ModelMap model, HttpSession session, MemValueObject memValueObject) throws Exception {
		Logger.info(null);
		session.getAttribute("userLoginInfo");
		MemValueObject userLoginInfo = (MemValueObject)session.getAttribute("userLoginInfo");
		nmeCardValueObject.setCretrSeq(userLoginInfo.getMemSeq());
		nmeCardValueObject.setNmeCardUseAt("N");
		nmeCardValueObject.setRecordCountPerPage(8);
		List<NmeCardValueObject> selectNmeCardList = nmeCardService.selectNmeCardList(nmeCardValueObject);
		model.addAttribute("selectNmeCardList", selectNmeCardList);
		return "nmeCard/nmeCardBinSelectForm";
	}

	//명함 휴지통 완전 삭제 완료
	@RequestMapping(value = "/deleteNmeCardBin.do", method={RequestMethod.GET, RequestMethod.POST})
	public String deleteNmeCardBin(@RequestParam(value="checkArray[]") List<Integer> deleteList, @ModelAttribute("nmeCardValueObject") NmeCardValueObject nmeCardValueObject, ModelMap model) throws Exception {
		Logger.info(null);
		ArrayList<Integer> deleteArray = new ArrayList<Integer>();
		for(int i=0;i<deleteList.size();i++){
			deleteArray.add(deleteList.get(i));
		}
		nmeCardService.deleteNmeCardBin(deleteArray);
		return "redirect:/nmeCardSelectForm.do";
	}

	//명함 휴지통 복원
	@RequestMapping(value = "/recvyNmeCardBin.do", method={RequestMethod.GET, RequestMethod.POST})
	public String recvyNmeCardBin(@RequestParam(value="checkArray[]") List<Integer> deleteList, @ModelAttribute("nmeCardValueObject") NmeCardValueObject nmeCardValueObject, ModelMap model) throws Exception {
		Logger.info(null);
		ArrayList<Integer> deleteArray = new ArrayList<Integer>();
		for(int i=0;i<deleteList.size();i++){
			deleteArray.add(deleteList.get(i));
		}
		nmeCardService.recvyNmeCardBin(deleteArray);
		return "redirect:/nmeCardSelectForm.do";
	}
   
   //명함 커뮤니케이션 조회 화면
   @RequestMapping(value = "/nmeCardComnctnSelectForm.do", method={RequestMethod.GET, RequestMethod.POST})
   public String nmeCardComnctnSelectForm(ComnctnSearchAndPageValueObject comnctnSearchAndPageValueObject,ComnctnNmeCardValueObject comnctnNmeCardValueObject,ModelMap model,HttpSession session) throws Exception {
	  session.getAttribute("sessionNmeCardSeq");
	  NmeCardValueObject sessionNmeCardSeq = (NmeCardValueObject)session.getAttribute("sessionNmeCardSeq");
	  comnctnNmeCardValueObject.setNmeCardSeq(sessionNmeCardSeq.getNmeCardSeq());
	  
      List<ComnctnNmeCardValueObject> selectNmeCardComnctnList = nmeCardService.selectNmeCardComnctnList(comnctnNmeCardValueObject);
      model.addAttribute("selectNmeCardComnctnList", selectNmeCardComnctnList);
      String comnctnType= comnctnNmeCardValueObject.getComnctnType();
      model.addAttribute("comnctnType2",comnctnType);
      int NmeCardSeq2= comnctnNmeCardValueObject.getNmeCardSeq();
      model.addAttribute("NmeCardSeq2",NmeCardSeq2);
      return "nmeCard/nmeCardComnctnSelectForm";
   }
   
   //명함 커뮤니케이션,명함변경내역 버튼 화면
   @RequestMapping(value = "/nmeCardButtonForm.do", method = RequestMethod.POST)
   public String nmeCardButtonForm(@RequestParam("nmeCardSeq") int nmeCardSeq,ModelMap model ) {
      System.out.println("nmeCardController의 nmeCardButtonForm.do 작동");
      model.addAttribute("NmeCardSeq",nmeCardSeq);
      return "nmeCard/nmeCardButtonForm";
   }
   
   	//커뮤니케이션 등록 화면
 	@RequestMapping(value = "/nmeCardComnctnInsertForm.do", method = {RequestMethod.GET, RequestMethod.POST})
 	public String nmeCardComnctnInsertForm(ComnctnNmeCardValueObject comnctnNmeCardValueObject, ModelMap model, HttpSession session) throws Exception {
 		return "nmeCard/nmeCardComnctnInsertForm";
 		
 	}
 	
 	//커뮤니케이션 등록 완료
	@RequestMapping(value = "/nmeCardComnctnInsert.do", method={RequestMethod.GET, RequestMethod.POST})
	public String nmeCardComnctnInsert(ModelMap model, ComnctnNmeCardValueObject comnctnNmeCardValueObject, HttpSession session, MemValueObject memValueObject) throws Exception {
		Logger.info(null);
		session.getAttribute("userLoginInfo");
		MemValueObject userLoginInfo = (MemValueObject)session.getAttribute("userLoginInfo");
		session.getAttribute("sessionNmeCardSeq");
		NmeCardValueObject sessionNmeCardSeq = (NmeCardValueObject)session.getAttribute("sessionNmeCardSeq");
		
		comnctnNmeCardValueObject.setMemSeq(userLoginInfo.getMemSeq());
		comnctnNmeCardValueObject.setNmeCardSeq(sessionNmeCardSeq.getNmeCardSeq());
		System.out.println(comnctnNmeCardValueObject.getNmeCardSeq()+"::::등록완료에 명함seq 값 확인");
		System.out.println(comnctnNmeCardValueObject.getMemSeq()+"너는 누구냐....");
		System.out.println("쉼표가뜨는지 확인하는 컨트롤로"+comnctnNmeCardValueObject.getComnctnType());
		nmeCardService.insertNmeCardComnctn(comnctnNmeCardValueObject);
		
		return "redirect:/nmeCardComnctnSelectForm.do";
	}
	
	//커뮤니케이션 상세보기
	@RequestMapping(value = "/nmeCardComnctnViewForm.do", method = {RequestMethod.POST, RequestMethod.GET})
	public String a() {
		return "nmeCard/nmeCardComnctnViewForm";
	}
}