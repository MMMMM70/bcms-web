<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="sharMapper">
	<resultMap id="sharValues" type="SharVo">
		<result property="sharSeq" column="shar_seq"/>   <!-- 공유SEQ -->
		<result property="nmeCardSeq" column="nmecard_seq"/> <!-- 명함SEQ -->
		<result property="sharType" column="shar_type"/> <!-- 공유 타입 -->
		<result property="sharCretDate" column="shar_cret_date"/>		 <!-- 공유날짜 -->
		<result property="memSeq" column="mem_seq"/>
		<result property="memNme" column="mem_nme"/>
		<result property="memDepmtNme" column="mem_depmt_nme"/>
		<result property="memPostnNme" column="mem_postn_nme"/>
		<result property="memEmail" column="mem_email"/>
	</resultMap>

	<select id="dumpMemList"  resultMap="sharValues" parameterType="SharVo">
	SELECT mem.mem_Seq,
			  mem.mem_nme, 
			  dep.depmt_nme,
			  mem.mem_postn_nme, 
			  mem.mem_email 
	FROM dump_tb dump,mem_tb mem
	RIGHT JOIN depmt_tb dep
	ON mem.mem_depmt_seq=dep.depmt_seq
	WHERE dump.shar_type='y' 
	and mem.mem_seq = dump.mem_seq 
	and dump.nmecard_seq = #{nmeCardSeq};
	</select>
	
	<select id="selectMemList"  resultMap="sharValues" parameterType="SharVo">
		SELECT
			mem.mem_Seq,mem.mem_nme, dep.depmt_nme, mem.mem_postn_nme, mem.mem_email
		FROM
		mem_tb mem
		RIGHT JOIN depmt_tb dep
		ON mem.mem_depmt_seq=dep.depmt_seq
        WHERE
        mem.mem_seq !=#{memSeq};
	</select>
	
	<select id="nonSharMemList"  resultMap="sharValues" parameterType="SharVo">
		SELECT  mem.mem_Seq,
		mem.mem_nme,
		dep.depmt_nme,
		mem.mem_postn_nme,
		mem.mem_email
		FROM
				mem_tb mem
				RIGHT JOIN depmt_tb dep
				ON mem.mem_depmt_seq=dep.depmt_seq
		WHERE
		mem.mem_seq not in(SELECT shar.mem_seq
									FROM shar_tb as shar
									WHERE shar.nmecard_seq = #{nmeCardSeq}  
									AND shar.shar_type ='y'
									)
		and mem.mem_seq not in (SELECT dump.mem_seq
										   FROM dump_tb as dump
										   WHERE dump.nmecard_seq = #{nmeCardSeq} 
										   AND dump.shar_type ='y')
		and mem.mem_seq !=#{memSeq};
	</select>
	
	<select id="sharMemList"  resultMap="sharValues" parameterType="SharVo">
		SELECT  mem.mem_Seq,
				mem.mem_nme,
				dep.depmt_nme,
                mem.mem_postn_nme,
                mem.mem_email
		FROM
		mem_tb mem
		RIGHT JOIN depmt_tb dep
		ON mem.mem_depmt_seq=dep.depmt_seq
        WHERE
        mem.mem_seq in(SELECT shar.mem_seq
        							FROM shar_tb as shar
        							WHERE shar.nmecard_seq = #{nmeCardSeq}
        							AND shar.shar_type ='y'
        							)
        and mem.mem_seq !=#{memSeq};
	</select>
	
	<insert id="insertDump"  parameterType="SharVo">
		INSERT into dump_tb(dump_seq,
								  shar_type,
								  mem_seq,
								  nmeCard_seq)
		VALUE((SELECT IFNULL(MAX(dump_seq),0)+1 FROM dump_tb as dump_seq),
				'y',
				#{memSeq},
				#{nmeCardSeq});
	
	</insert>
	
	<delete id="deleteDump"  parameterType="SharVo">
		DELETE FROM dump_tb 
		WHERE nmeCard_seq = #{nmeCardSeq}
		AND mem_Seq = #{memSeq};
	</delete>
	
	<insert id ="dumpToShar" parameterType="SharVo">
	INSERT INTO SHAR_TB(shar_SEQ, 
							   nmecard_seq, 
							   MEM_SEQ, 
							   SHAR_TYPE,
							   shar_cret_date)        
        SELECT (SELECT IFNULL(MAX(shar_seq),0) from shar_tb)+@seq := @seq+1 as seq,
        		 nmecard_seq, 
        		 mem_seq, 
        		 shar_type, 
        		 now()
        FROM dump_tb, 
         		(SELECT @seq :=0)a
        WHERE nmecard_seq = #{nmeCardSeq};
	</insert>
	
	<insert id ="newSpeedSharInsert" parameterType="SharVo">
INSERT INTO newspeed_tb(newspeed_Seq, 
							         send_Nme, 
							         nmecard_firstnme, 
							         nmecard_lastnme,
							         newspeed_type,
							         newspeed_date,
							         receive_Seq) 
        SELECT (SELECT IFNULL( max(newspeed_seq), 0) from newspeed_tb)+@seq := @seq+1 as seq,
				mem.mem_nme,
                nmecard.nmecard_firstnme,
                nmecard.nmecard_lastnme,
                'y',
                now(),
                dump.mem_seq
        FROM dump_tb dump, mem_tb mem 
			 ,nmecard_tb nmecard ,
         		(SELECT @seq :=0)a
        WHERE dump.nmecard_seq = #{nmeCardSeq}
        and dump.nmecard_seq = nmecard.nmecard_seq
		and mem.mem_seq=#{sendMemSeq};
	</insert>
	
	<insert id ="newSpeedSharRels" parameterType="SharVo">
	INSERT INTO newspeed_tb(newspeed_Seq, 
							         send_Nme, 
							         nmecard_firstnme, 
							         nmecard_lastnme,
							         newspeed_type,
							         newspeed_date,
							         receive_Seq) 
Value(        (SELECT (SELECT IFNULL( max(bear.newspeed_seq), 0)+@seq := @seq+1  from newspeed_tb as bear, (SELECT @seq :=0)a)),
				(SELECT mem_nme FROM mem_tb where mem_Seq = #{sendMemSeq}),
                (SELECT nmecard_firstnme FROM nmecard_tb WHERE nmecard_seq = #{nmeCardSeq}),
                (SELECT nmecard_lastnme FROM nmecard_tb WHERE nmecard_seq = #{nmeCardSeq}),
                'n',
                now(),
                #{memSeq});
                
                
	</insert> 
<!-- 	공유 해제 뉴스피드 인설트 -->
	
	<delete id="dumpCleaning"  parameterType="SharVo">
		DELETE FROM dump_tb 
		WHERE nmeCard_seq = #{nmeCardSeq};
	</delete>
	
	<update id="remvSharRecv"  parameterType="SharVo">
		UPDATE SHAR_TB
		SET shar_type='n'
		WHERE nmecard_seq=#{nmeCardSeq}
		AND mem_seq=#{memSeq};
	</update>
	<select id="allMemList"  resultMap="sharValues" parameterType="int">
		SELECT mem_Seq
		FROM
		mem_tb
		WHERE
		mem_seq != #{where}
	</select>
<!-- 	보내기 안한 사람 -->
	<select id="noneSendMemList"  resultMap="sharValues" parameterType="map">
	SELECT  mem.mem_Seq,
			mem.mem_nme,
			dep.depmt_nme,
	                mem.mem_postn_nme,
	                mem.mem_email
	FROM
	mem_tb mem
	RIGHT JOIN depmt_tb dep
	ON mem.mem_depmt_seq=dep.depmt_seq
        WHERE
        mem.mem_seq NOT IN (SELECT mem_seq
					         FROM dump_tb
			                         WHERE shar_type = 'c'
			             AND            
			                         <foreach item="item" collection="senderInfo"  separator="OR">
					           nmecard_seq = #{item}
						  </foreach>
						)
	AND mem.mem_seq!=#{SharVo.memSeq};
	</select>
	
<!-- 	보낼 사람 -->
	<select id="sendMemList"  resultMap="sharValues" parameterType="map">
	SELECT  mem.mem_Seq,
			mem.mem_nme,
			dep.depmt_nme,
	                mem.mem_postn_nme,
	                mem.mem_email
	FROM
	mem_tb mem
	RIGHT JOIN depmt_tb dep
	ON mem.mem_depmt_seq=dep.depmt_seq
        WHERE
        mem.mem_seq IN (SELECT mem_seq
				         FROM dump_tb
		                         WHERE shar_type = 'c'
			             AND            
			                         <foreach item="item" collection="senderInfo"  separator="OR">
				            nmecard_seq = #{item}
					  </foreach>
					)         
	AND mem.mem_seq!=#{SharVo.memSeq};
		                     
	</select>

	<insert id="addSendRecv"  parameterType="SharVo">
	INSERT into dump_tb(dump_seq,
							  shar_type,
							  mem_seq,
							  nmeCard_seq)
	VALUE((SELECT IFNULL(MAX(dump_seq),0)+1 FROM dump_tb as dump_seq),
			'c',
			#{memSeq},
			#{nmeCardSeq});

	</insert>
<!-- 	공유 해제 뉴스피드 인설트 -->
	
	<delete id="remvSendRecv" parameterType="SharVo">
		DELETE FROM dump_tb 
		WHERE nmeCard_seq = #{nmeCardSeq} 
		AND	mem_seq = #{memSeq}
		AND shar_type = 'c';
	</delete>	
	<insert id ="insertSend" parameterType="map">
	INSERT INTO comnctn_shar_tb(comnctn_shar_seq, 
							   comnctn_seq, 
							   mem_seq, 
							   comnctn_shar_use_at,
							   comnctn_shar_cret_date)
							  <foreach item="item" collection="senderInfo"  separator="  UNION">        
        SELECT (SELECT IFNULL(MAX(comnctn_shar_seq),0) from comnctn_shar_tb)+@seq := @seq+1 as seq,
        		 nmecard_seq, 
        		 mem_seq, 
        		 shar_type, 
        		 now()
        FROM dump_tb, 
         		(SELECT @seq :=0)a
        WHERE nmecard_seq = #{item}
        AND shar_type='y'
    </foreach>
    ;
        </insert>
	
	<delete id="cancelSend" parameterType="map">
		DELETE FROM dump_tb 
		WHERE shar_type = 'c'
		AND            
	<foreach item="item" collection="senderInfo"  separator="OR">
	nmecard_seq = #{item}
	</foreach>
	</delete>
	
	<insert id ="newSpeedSendInsert" parameterType="map">
	INSERT INTO newspeed_tb(newspeed_Seq, 
							         send_Nme, 
							         nmecard_firstnme, 
							         nmecard_lastnme,
							         newspeed_type,
							         newspeed_date,
							         receive_Seq) 
        <foreach item="item" collection="senderInfo"  separator="  UNION">
        SELECT (SELECT IFNULL( max(newspeed_seq), 0) from newspeed_tb)+@seq := @seq+1 as seq,
				mem.mem_nme,
                nmecard.nmecard_firstnme,
                nmecard.nmecard_lastnme,
                'c',
                now(),
                #{item}
        FROM mem_tb mem 
		 ,nmecard_tb nmecard ,
		 (SELECT @seq :=0)a
       WHERE nmecard.nmecard_seq= #{SharVo.nmeCardSeq}
			and mem.mem_seq=#{SharVo.sendMemSeq}
	</foreach>
	;
	</insert>	
        
</mapper>