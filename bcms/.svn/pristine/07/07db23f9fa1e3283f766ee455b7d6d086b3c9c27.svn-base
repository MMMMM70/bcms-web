package net.su.login.service;

import java.util.List;

import javax.annotation.Resource;

import net.su.login.dataAccessObject.MemDataAccessObject;
import net.su.login.valueObject.MemValueObject;
import net.su.login.security.Base64Utils;

import org.springframework.stereotype.Service;

@Service
public class MemServiceImpl implements MemService {
	
	@Resource
	private MemDataAccessObject memDataAccessObject;
	Base64Utils base64 = new Base64Utils();//요놈선언
	String encryptKey = "temp11111111111111111111";//key 선언 
	//키값은 무조건 24자리이여야 한듯.
	//Base64Utils.java 파일에서 키값의 길이를 수정하면 될것도 같으나,
	//seed 암호화에서 key값이 원래 24자리가 필요할지도 몰라서 그냥 1로 채움
	//seed + base64 암호화, 복호화
	
	public int confirm(MemValueObject memValueObject) throws Exception {
		System.out.println("MemServiceImpl의 confirm() 작동");
		//기본 pw
		String W_ORG_FG = memValueObject.getMemPw();
		//암호화 pw
		String EN_ORG_FG = base64.encrypt(W_ORG_FG,encryptKey);
		memValueObject.setMemPw(EN_ORG_FG);
		int confirm = memDataAccessObject.confirm(memValueObject);
		return confirm;
	}

	public MemValueObject selectMemInfo(MemValueObject memValueObject) throws Exception {
		System.out.println("MemServiceImpl의 selectMemInfo() 작동");
		memValueObject = memDataAccessObject.selectMemInfo(memValueObject);
		return memValueObject;
	}
	
	//회사등록
	public void insertCompn (MemValueObject memValueObject) throws Exception{
		System.out.println(memValueObject.getMemCompnNme()+"회사이름");
		
		memValueObject.setMemCompnSeq(memDataAccessObject.selectMemCompnSeq());
		memDataAccessObject.insertCompn(memValueObject);
	}
	
	//부서등록
	public void insertDepmt (MemValueObject memValueObject) throws Exception{
		memValueObject.setMemDepmtSeq(memDataAccessObject.selectMemDepmtSeq());
		memDataAccessObject.insertCompn(memValueObject);
	}
	
	//회원가입
	public void insertMembership (MemValueObject memValueObject) throws Exception{
		memValueObject.setMemSeq(memDataAccessObject.selectMemSeq());
		memDataAccessObject.insertMembership(memValueObject);
	}
	
	//회사 ajax
	public List<MemValueObject> memCompnList() throws Exception{
		
		List<MemValueObject> memCompnList = memDataAccessObject.memCompnList();
		
		return memCompnList;
	}
	
}
