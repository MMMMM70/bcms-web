package net.su.bcms.controller;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import net.su.bcms.service.NmeCardService;
import net.su.bcms.service.SharNmeCardService;
import net.su.bcms.valueObject.ComnctnNmeCardValueObject;
import net.su.bcms.valueObject.ComnctnSearchAndPageValueObject;
import net.su.bcms.valueObject.NmeCardValueObject;
import net.su.bcms.valueObject.SearchAndPageValueObject;
import net.su.logger.Logger;
import net.su.login.valueObject.MemValueObject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;

@Controller
public class SharNmeCardController {
	
	@Resource
	private SharNmeCardService sharNmeCardService;
	
	   //공유명함 조회 화면
	   @RequestMapping(value = "/sharNmeCardSelectForm.do", method={RequestMethod.GET, RequestMethod.POST})
	   public String sharNmeCardSelectForm(NmeCardValueObject nmeCardValueObject, SearchAndPageValueObject searchAndPageValueObject, ModelMap model, HttpSession session, MemValueObject memValueObject) throws Exception {
		  Logger.info(null);
		  session.getAttribute("userLoginInfo");
		  MemValueObject userLoginInfo = (MemValueObject)session.getAttribute("userLoginInfo");
	      nmeCardValueObject.setCretrSeq(userLoginInfo.getMemSeq());
	      nmeCardValueObject.setNmeCardUseAt("Y");
	      List<NmeCardValueObject> selectSharNmeCardList = sharNmeCardService.selectSharNmeCardList(nmeCardValueObject);
	      model.addAttribute("selectNmeCardList", selectSharNmeCardList);
	      return "sharNmeCard/sharNmeCardSelectForm";
	   }
	   //공유명함 상세보기 화면
	   @RequestMapping(value = "/sharNmeCardSelectViewForm.do", method={RequestMethod.GET, RequestMethod.POST})
	   public String sharNmeCardSelectViewForm(@ModelAttribute("nmeCardValueObject") NmeCardValueObject nmeCardValueObject, ModelMap model, HttpSession session,ComnctnNmeCardValueObject comnctnNmeCardValueObject) throws Exception {
	      Logger.info(null);
	      System.out.println(nmeCardValueObject.getLicnsSeq()+"@@@@@@@@@");
	      nmeCardValueObject = sharNmeCardService.selectSharNmeCardView(nmeCardValueObject);
	      model.addAttribute("selectNmeCardView", nmeCardValueObject);
	      session.setAttribute("sessionNmeCardSeq", null);
	      session.setAttribute("sessionNmeCardSeq", nmeCardValueObject);
	      NmeCardValueObject sessionNmeCardSeq = (NmeCardValueObject)session.getAttribute("sessionNmeCardSeq");
	      return "sharNmeCard/sharNmeCardSelectViewForm";
	   }
//		//명함 휴지통 조회 화면
//		@RequestMapping(value = "/sharNmeCardBinSelectForm.do", method={RequestMethod.GET, RequestMethod.POST})
//		public String nmeCardBinSelectForm(NmeCardValueObject nmeCardValueObject, SearchAndPageValueObject searchAndPageValueObject, ModelMap model, HttpSession session, MemValueObject memValueObject) throws Exception {
//			Logger.info(null);
//			session.getAttribute("userLoginInfo");
//			MemValueObject userLoginInfo = (MemValueObject)session.getAttribute("userLoginInfo");
//			nmeCardValueObject.setCretrSeq(userLoginInfo.getMemSeq());
//			nmeCardValueObject.setNmeCardUseAt("N");
//			nmeCardValueObject.setRecordCountPerPage(8);
//			List<NmeCardValueObject> selectNmeCardList = sharNmeCardService.selectNmeCardList(nmeCardValueObject);
//			model.addAttribute("selectNmeCardList", selectNmeCardList);
//			return "nmeCard/sharNmeCardBinSelectForm";
//		}
	   
	   //공유명함 커뮤니케이션 조회 화면
	   @RequestMapping(value = "/sharNmeCardComnctnSelectForm.do", method={RequestMethod.GET, RequestMethod.POST})
	   public String sharNmeCardComnctnSelectForm(ComnctnSearchAndPageValueObject comnctnSearchAndPageValueObject,ComnctnNmeCardValueObject comnctnNmeCardValueObject,ModelMap model,HttpSession session) throws Exception {
		  session.getAttribute("sessionNmeCardSeq");
		  NmeCardValueObject sessionNmeCardSeq = (NmeCardValueObject)session.getAttribute("sessionNmeCardSeq");
		  comnctnNmeCardValueObject.setNmeCardSeq(sessionNmeCardSeq.getNmeCardSeq());
		  session.getAttribute("userLoginInfo");
		  MemValueObject userLoginInfo = (MemValueObject)session.getAttribute("userLoginInfo");
		  int memSeq=userLoginInfo.getMemSeq();
		  model.addAttribute("memSeq",memSeq);
		  
	      List<ComnctnNmeCardValueObject> selectSharNmeCardComnctnList = sharNmeCardService.selectSharNmeCardComnctnList(comnctnNmeCardValueObject);
	      model.addAttribute("selectSharNmeCardComnctnList", selectSharNmeCardComnctnList);
	      String comnctnType= comnctnNmeCardValueObject.getComnctnType();
	      model.addAttribute("comnctnType2",comnctnType);
	      int NmeCardSeq2= comnctnNmeCardValueObject.getNmeCardSeq();
	      model.addAttribute("NmeCardSeq2",NmeCardSeq2);
	      return "sharNmeCard/sharNmeCardComnctnSelectForm";
	   }
	   
	 //공유명함 커뮤니케이션,명함변경내역 버튼 화면
	   @RequestMapping(value = "/sharNmeCardButtonForm.do", method = RequestMethod.POST)
	   public String sharNmeCardButtonForm(@RequestParam("nmeCardSeq") int nmeCardSeq,ModelMap model ) {
	      System.out.println("SharNmeCardController의 sharNmeCardButtonForm.do 작동");
	      model.addAttribute("NmeCardSeq",nmeCardSeq);
	      return "sharNmeCard/sharNmeCardButtonForm";
	   }
	  	
	   //공유명함 커뮤니케이션 삭제
	   @RequestMapping(value = "/deleteSharNmeCardComnctn.do", method={RequestMethod.GET, RequestMethod.POST})
	   public String deleteSharNmeCardComnctn(@RequestParam(value="checkArray[]") List<Integer> deleteList, @ModelAttribute("comnctnNmeCardValueObject") ComnctnNmeCardValueObject comnctnNmeCardValueObject, ModelMap model) throws Exception {
	      ArrayList<Integer> deleteArray = new ArrayList<Integer>();
	      for(int i=0;i<deleteList.size();i++){
	         deleteArray.add(deleteList.get(i));
	      }
	      sharNmeCardService.deleteSharNmeCardComnctn(deleteArray);
	      return "redirect:/sharNmeCardComnctnSelectForm.do";
	   }
	   
	   //공유명함 커뮤니케이션 등록 화면
	  	@RequestMapping(value = "/sharNmeCardComnctnInsertForm.do", method = {RequestMethod.GET, RequestMethod.POST})
	  	public String sharNmeCardComnctnInsertForm(ComnctnNmeCardValueObject comnctnNmeCardValueObject, ModelMap model, HttpSession session) throws Exception {
	  		return "sharNmeCard/sharNmeCardComnctnInsertForm";
	  	}
	  	
	 	//공유명함 커뮤니케이션 등록
		@RequestMapping(value = "/insertSharNmeCardComnctn.do", method={RequestMethod.GET, RequestMethod.POST})
		public String sharNmeCardComnctnInsert(ModelMap model, ComnctnNmeCardValueObject comnctnNmeCardValueObject, HttpSession session, MemValueObject memValueObject) throws Exception {
			Logger.info(null);
			session.getAttribute("userLoginInfo");
			MemValueObject userLoginInfo = (MemValueObject)session.getAttribute("userLoginInfo");
			session.getAttribute("sessionNmeCardSeq");
			NmeCardValueObject sessionNmeCardSeq = (NmeCardValueObject)session.getAttribute("sessionNmeCardSeq");
			comnctnNmeCardValueObject.setMemSeq(userLoginInfo.getMemSeq());
			comnctnNmeCardValueObject.setComnctnCretrSeq(userLoginInfo.getMemSeq());
			comnctnNmeCardValueObject.setNmeCardSeq(sessionNmeCardSeq.getNmeCardSeq());
			System.out.println(comnctnNmeCardValueObject.getNmeCardSeq()+"::::등록완료에 명함seq 값 확인");
			System.out.println(comnctnNmeCardValueObject.getMemSeq()+"너는 누구냐....");
			System.out.println("쉼표가뜨는지 확인하는 컨트롤로"+comnctnNmeCardValueObject.getComnctnType());
			sharNmeCardService.insertSharNmeCardComnctn(comnctnNmeCardValueObject);
			return "redirect:/sharNmeCardComnctnSelectForm.do";
		}
		
		//공유명함 커뮤니케이션 상세보기화면 
		@RequestMapping(value = "/sharNmeCardComnctnViewForm.do", method = {RequestMethod.POST, RequestMethod.GET})
		public String sharNmeCardComnctnViewForm(@ModelAttribute("comnctnNmeCardValueObject") ComnctnNmeCardValueObject comnctnNmeCardValueObject, ModelMap model, HttpSession session, MemValueObject memValueObject) throws Exception {
			System.out.println("커뮤니케이션 상세보기 컨트롤러 확인");
			Logger.info(null);
			session.getAttribute("userLoginInfo");
			MemValueObject userLoginInfo = (MemValueObject)session.getAttribute("userLoginInfo");
			session.getAttribute("sessionNmeCardSeq");
			NmeCardValueObject sessionNmeCardSeq = (NmeCardValueObject)session.getAttribute("sessionNmeCardSeq");
			comnctnNmeCardValueObject.setMemSeq(userLoginInfo.getMemSeq());
			comnctnNmeCardValueObject.setNmeCardSeq(sessionNmeCardSeq.getNmeCardSeq());
			System.out.println(comnctnNmeCardValueObject.getComnctnSeq()+"커뮤니SEQ");
			System.out.println(comnctnNmeCardValueObject.getMemSeq()+"멤고유값");
			System.out.println(comnctnNmeCardValueObject.getNmeCardSeq()+"명함고유값");
			ComnctnNmeCardValueObject comnctnSharNmeCardList = sharNmeCardService.selectSharNmeCardComnctnView(comnctnNmeCardValueObject);
			model.addAttribute("selectSharNmeCardComnctnView", comnctnSharNmeCardList);
			return "sharNmeCard/sharNmeCardComnctnViewForm";
		}
		
		//공유명함 커뮤니케이션 수정 화면
	 	@RequestMapping(value = "/sharNmeCardComnctnUpdateForm.do", method = {RequestMethod.GET, RequestMethod.POST})
	 	public String sharNmeCardComnctnUpdateForm(@ModelAttribute("comnctnNmeCardValueObject") ComnctnNmeCardValueObject comnctnNmeCardValueObject, ModelMap model, HttpSession session, MemValueObject memValueObject) throws Exception {
	 		Logger.info(null);
	 		System.out.println("comnctnNmeCardValueObject="+comnctnNmeCardValueObject.getComnctnSeq());
			session.getAttribute("userLoginInfo");
			MemValueObject userLoginInfo = (MemValueObject)session.getAttribute("userLoginInfo");
			session.getAttribute("sessionNmeCardSeq");
			NmeCardValueObject sessionNmeCardSeq = (NmeCardValueObject)session.getAttribute("sessionNmeCardSeq");
			comnctnNmeCardValueObject.setMemSeq(userLoginInfo.getMemSeq());
			comnctnNmeCardValueObject.setNmeCardSeq(sessionNmeCardSeq.getNmeCardSeq());
			System.out.println(comnctnNmeCardValueObject.getComnctnSeq()+"커뮤니SEQ");
			System.out.println(comnctnNmeCardValueObject.getMemSeq()+"멤고유값");
			System.out.println(comnctnNmeCardValueObject.getNmeCardSeq()+"명함고유값");
			ComnctnNmeCardValueObject selectSharNmeCardComnctnView = sharNmeCardService.selectSharNmeCardComnctnView(comnctnNmeCardValueObject);
			model.addAttribute("selectSharNmeCardComnctnView", selectSharNmeCardComnctnView);
	 		return "sharNmeCard/sharNmeCardComnctnUpdateForm";
		 }
	 	
	 	//공유명함 커뮤니케이션 수정
	 	@RequestMapping(value = "/updateSharNmeCardComnctn.do", method = {RequestMethod.GET, RequestMethod.POST})
	 	public String updateSharNmeCardComnctn(@ModelAttribute("comnctnNmeCardValueObject") ComnctnNmeCardValueObject comnctnNmeCardValueObject, ModelMap model, HttpSession session, MemValueObject memValueObject) throws Exception {
	 		Logger.info(null);
			session.getAttribute("userLoginInfo");
			MemValueObject userLoginInfo = (MemValueObject)session.getAttribute("userLoginInfo");
			session.getAttribute("sessionNmeCardSeq");
			NmeCardValueObject sessionNmeCardSeq = (NmeCardValueObject)session.getAttribute("sessionNmeCardSeq");
			comnctnNmeCardValueObject.setMemSeq(userLoginInfo.getMemSeq());
			comnctnNmeCardValueObject.setNmeCardSeq(sessionNmeCardSeq.getNmeCardSeq());
			System.out.println(comnctnNmeCardValueObject.getComnctnSeq()+"커뮤니SEQ");
			System.out.println(comnctnNmeCardValueObject.getMemSeq()+"멤고유값");
			System.out.println(comnctnNmeCardValueObject.getNmeCardSeq()+"명함고유값");
			System.out.println(comnctnNmeCardValueObject.getComnctnTitl()+"ㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎ");
			System.out.println(comnctnNmeCardValueObject.getComnctnContn()+"ㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎ");
			sharNmeCardService.updateSharNmeCardComnctn(comnctnNmeCardValueObject);
	 		return "redirect:/sharNmeCardComnctnViewForm.do?comnctnSeq="+comnctnNmeCardValueObject.getComnctnSeq();
		 }
}